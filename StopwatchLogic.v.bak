module StopwatchLogic(
	input CLK_100Hz,
	input reset_n,
	input start_stop,
	input hold,
	output [6:0] stopwatch_unit_mins,
	output [5:0] stopwatch_unit_secs,
	output [6:0] stopwatch_unit_decs,
	output reg stopwatch_overflow
);
	wire overflow;
	wire controlled_clk;
	//counter part
	StopwatchCounter sc0(
		controlled_clk, 
		reset_n, 
		stopwatch_unit_mins, 
		stopwatch_unit_secs,
		stopwatch_unit_decs,
		overflow
	);
	//start_stop part
	reg orOut0;
	reg orOut1;
	
	wire Q_JK;
	wire Q_SR;
	
	JKFlipFlop jkff0
	(
		start_stop,
		1'b1,
		1'b1,
		Q_JK
	);
	
	SRFF srff0
	(
		Q_JK,
		orOut0,
		orOut1,
		Q_SR,
		controlled_clk
	);
	
	always @(posedge CLK_100Hz) begin
		orOut0 <= CLK_100Hz | Q_JK;
		orOut1 <= !CLK_100Hz | Q_JK;
		stopwatch_overflow <= overflow;
	end
endmodule
